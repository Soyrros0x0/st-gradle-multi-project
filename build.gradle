/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE'
        //classpath 'io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE'
    }
}
//def javaProjects = getSubprojects()
def bootProjects = ['app']

configure(allprojects){
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    version = '1.3.1.4'
}

configure(subprojects) {

    apply plugin: 'java'

    apply plugin: "io.spring.dependency-management"

    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'source/java'
            }
            resources {
                srcDir 'config'
            }
        }

        test {
            java {
                srcDir 'source/test-java'
            }
            resources {
                srcDir 'source/test-resources'
            }
        }
    }

    afterEvaluate {
        dependencyManagement {
            imports {
                mavenBom 'io.spring.platform:platform-bom:Cairo-RELEASE'
            }
        }
    }

    dependencies {
        //compile 'org.slf4j:slf4j-api'
        //testCompile 'junit:junit'
    }

    configurations {
        //all*.exclude group: 'commons-logging', module: 'commons-logging'
        //all*.exclude group: 'log4j', module: 'log4j'
    }

    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
}

configure(bootProjects){
    apply plugin: 'org.springframework.boot'
}
